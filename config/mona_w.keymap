/*
 * Copyright (c) 2023 Ramon Imbao
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

/ {
    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&gresc         &kp N1    &kp N2    &kp N3  &kp N4  &kp N5  &kp EQUAL          &kp MINUS  &kp NUMBER_6  &kp N7  &kp N8     &kp N9         &kp N0   &kp BACKSLASH  &kp BSPC
&kp TAB        &kp Q     &kp W     &kp F   &kp P   &kp G   &kp LEFT_BRACKET   &kp J      &kp L         &kp U   &kp Y      &kp SEMICOLON  &kp SQT                 &kp BACKSPACE
&kp BACKSPACE  &kp A     &kp R     &kp S   &kp T   &kp D   &kp RIGHT_BRACKET  &kp H      &kp N         &kp E   &kp I      &kp O                   &kp ENTER
&kp LSHFT                &kp Z     &kp X   &kp C   &kp V   &kp B              &kp SLASH  &kp K         &kp M   &kp COMMA  &kp PERIOD              &kp RSHFT      &mo 2
&kp LCTRL      &kp LGUI  &kp LALT                                                        &kp SPACE             &mo 2      &kp RALT                &kp RIGHT_WIN  &kp RCTRL
            >;
        };

        qwerty {
            bindings = <
&gresc     &kp N1  &kp N2  &kp N3  &kp N4  &kp N5  &kp MINUS  &kp EQUAL  &kp N6     &kp N7  &kp N8     &kp N9    &kp N0   &kp BSLH   &kp BSPC
&kp TAB    &kp Q   &kp W   &kp E   &kp R   &kp T   &kp LBKT   &kp Y      &kp U      &kp I   &kp O      &kp P     &kp SQT             &kp BSPC
&kp CAPS   &kp A   &kp S   &kp D   &kp F   &kp G   &kp RBKT   &kp H      &kp J      &kp K   &kp L      &kp SEMI           &kp RET
&kp LSHFT          &kp Z   &kp X   &kp C   &kp V   &kp B      &kp FSLH   &kp N      &kp M   &kp COMMA  &kp DOT            &kp RSHFT  &trans
&trans     &trans  &trans                                                &kp SPACE          &trans     &trans             &trans     &trans
            >;
        };

        layer_3 {
            bindings = <
&trans    &kp F1        &kp F2      &kp F3         &kp F4        &kp F5         &kp F11       &kp F12        &kp F6         &kp F7        &kp F8        &kp F9        &kp F10       &trans     &kp PRINTSCREEN
&trans    &kp LS(EXCL)  &kp LS(AT)  &kp LS(POUND)  &kp LS(DLLR)  &kp LS(PRCNT)  &kp LS(PLUS)  &kp LS(UNDER)  &kp LS(CARET)  &kp LS(AMPS)  &kp LS(STAR)  &kp LS(LPAR)  &kp LS(RPAR)             &kp LS(PIPE)
&trans    &kp N1        &kp N2      &kp N3         &kp N4        &kp N5         &kp EQUAL     &kp N6         &kp N7         &kp N8        &kp N9        &kp N0                      &kp MINUS
&kp HOME                &trans      &kp LEFT       &kp DOWN      &kp UP         &kp RIGHT     &trans         &trans         &trans        &trans        &trans                      &kp END    &mo 3
&trans    &trans        &trans                                                                               &trans                       &mo 3         &trans                      &trans     &trans
            >;
        };

        fn_layer {
            bindings = <
&kp GRAVE   &kp F1        &kp F2        &kp F3        &kp F4        &kp F5        &kp F6     &kp F7    &kp F8           &kp F9     &kp F10    &kp F11    &kp F12  &kp DELETE  &kp DELETE
&bt BT_CLR  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4  &kp PSCRN  &kp SLCK  &kp PAUSE_BREAK  &trans     &trans     &kp UP     &trans               &trans
&trans      &trans        &trans        &trans        &trans        &trans        &trans     &trans    &kp HOME         &kp PG_UP  &kp LEFT   &kp RIGHT           &trans
&trans                    &trans        &trans        &trans        &trans        &trans     &tog 1    &trans           &kp END    &kp PG_DN  &kp DOWN            &trans      &trans
&trans      &trans        &trans                                                                       &trans                      &trans     &trans              &trans      &trans
            >;
        };
    };
};
